import os
import logging
from telegram import Update, InputMediaPhoto, InputMediaVideo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler("messages.log"),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

class MediaGroupHandler:
    def __init__(self):
        self.media_groups = {}

    async def handle_media(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user = update.effective_user
        media_group_id = update.message.media_group_id

        try:
            # –î–ª—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø (–∞–ª—å–±–æ–º–æ–≤)
            if media_group_id:
                if media_group_id not in self.media_groups:
                    self.media_groups[media_group_id] = {
                        'media': [],
                        'sender_info': f"–ê–ª—å–±–æ–º –æ—Ç @{user.username} (ID: {user.id}):"
                    }

                # –î–æ–±–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞ –≤ –≥—Ä—É–ø–ø—É
                if update.message.photo:
                    media = InputMediaPhoto(media=update.message.photo[-1].file_id)
                elif update.message.video:
                    media = InputMediaVideo(media=update.message.video.file_id)
                else:
                    return

                self.media_groups[media_group_id]['media'].append(media)
                
                # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å –≤—Å–µ –º–µ–¥–∏–∞ –≤ –≥—Ä—É–ø–ø–µ
                if len(self.media_groups[media_group_id]['media']) >= 1:
                    await asyncio.sleep(2)  # –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –º–µ–¥–∏–∞ –≤ –≥—Ä—É–ø–ø–µ
                    if media_group_id in self.media_groups:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∞ –ª–∏ –≥—Ä—É–ø–ø–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
                        await self.send_media_group(context, media_group_id)
                return
            
            # –û–¥–∏–Ω–æ—á–Ω—ã–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã
            await self.send_single_media(update, context, user)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–¥–∏–∞: {e}")

    async def send_media_group(self, context, media_group_id):
        try:
            group = self.media_groups.get(media_group_id)
            if group and len(group['media']) > 0:
                # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
                await context.bot.send_message(
                    chat_id=ADMIN_ID,
                    text=group['sender_info']
                )
                
                # –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –≤–µ—Å—å –∞–ª—å–±–æ–º
                await context.bot.send_media_group(
                    chat_id=ADMIN_ID,
                    media=group['media']
                )
                
                # –£–¥–∞–ª—è–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≥—Ä—É–ø–ø—É
                del self.media_groups[media_group_id]
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã: {e}")

    async def send_single_media(self, update, context, user):
        try:
            # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
            await context.bot.send_message(
                chat_id=ADMIN_ID,
                text=f"–ú–µ–¥–∏–∞ –æ—Ç @{user.username} (ID: {user.id}):"
            )

            # –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –º–µ–¥–∏–∞—Ñ–∞–π–ª
            if update.message.photo:
                await context.bot.send_photo(
                    chat_id=ADMIN_ID,
                    photo=update.message.photo[-1].file_id,
                    caption=update.message.caption
                )
            elif update.message.video:
                await context.bot.send_video(
                    chat_id=ADMIN_ID,
                    video=update.message.video.file_id,
                    caption=update.message.caption
                )
            elif update.message.voice:
                await context.bot.send_voice(
                    chat_id=ADMIN_ID,
                    voice=update.message.voice.file_id
                )
                
            await update.message.reply_text("‚úÖ –í–∞—à–µ –º–µ–¥–∏–∞ –±—ã–ª–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ!")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –º–µ–¥–∏–∞: {e}")

media_handler = MediaGroupHandler()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user.username} (ID: {user.id}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.")
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å:\n"
        "- –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
        "- –§–æ—Ç–æ (–≤–∫–ª—é—á–∞—è –∞–ª—å–±–æ–º—ã)\n"
        "- –í–∏–¥–µ–æ\n"
        "- –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!"
    )

async def forward_text(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    text = update.message.text

    logger.info(f"@{user.username} (ID: {user.id}): {text}")

    try:
        # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
        await context.bot.send_message(
            chat_id=ADMIN_ID,
            text=f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{user.username} (ID: {user.id}):"
        )
        
        # –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - —Ç–µ–∫—Å—Ç
        await context.bot.send_message(
            chat_id=ADMIN_ID,
            text=text
        )
        
        await update.message.reply_text("‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ!")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")

async def forward_media(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await media_handler.handle_media(update, context)

def main() -> None:
    try:
        app = Application.builder().token(BOT_TOKEN).build()

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        app.add_handler(CommandHandler("start", start))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, forward_text))
        app.add_handler(MessageHandler(filters.PHOTO | filters.VIDEO | filters.VOICE, forward_media))

        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
        app.run_polling()
    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise

if __name__ == "__main__":
    import asyncio
    main()
