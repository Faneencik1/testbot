import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)
BOT_TOKEN = "8018300330:AAEuB_STqH_5mAz8A6VPQqOJR4se4ZHI6m8"
PORT = int(os.environ.get('PORT', 5000)) 
WEBHOOK_URL = os.getenv("WEBHOOK_URL", "")

# –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
RESPONSE_TEXT = (
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–Ω–∞–ª ¬´–û–¢–ë–†–û–°–´ –°–ï–í–°–ö–ê2¬ª –±—ã–ª –ø—Ä–æ–¥–∞–Ω, –ø–æ—ç—Ç–æ–º—É –±–æ—Ç —Å—Ç–∞–ª –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º. "
    "–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª, –Ω–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ ‚Äî @kostrovvv29.\n\n"
    "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∞ 16 —Å–µ–Ω—Ç—è–±—Ä—è –≤ 20:00."
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(RESPONSE_TEXT)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(RESPONSE_TEXT)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_all_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_name = update.message.from_user.first_name
    message_type = update.message.content_type
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞: {message_type}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
    await update.message.reply_text(RESPONSE_TEXT)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {context.error}")

def main() -> None:
    app = Application.builder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("getlog", get_log))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, forward_text))
    app.add_handler(MessageHandler(filters.PHOTO | filters.VIDEO | filters.VOICE, forward_media_group))

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
    if WEBHOOK_URL and os.environ.get('RENDER'):
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ webhook (Render)")
        app.run_webhook(
            listen="0.0.0.0",
            port=PORT,
            url_path=BOT_TOKEN,
            webhook_url=f"{WEBHOOK_URL}/{BOT_TOKEN}"
        )
    else:
        logger.info("üîÑ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ polling (–ª–æ–∫–∞–ª—å–Ω–æ)")
        app.run_polling(
            poll_interval=1.0,
            timeout=10,
            allowed_updates=Update.ALL_TYPES
        )

if __name__ == "__main__":
    main()
